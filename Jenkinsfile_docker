pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
    }
    stages { 
        stage('build') {
            steps {
                buildImage()
            }
                post{
                    success{
                        sh "bash send_notification.sh build 0"
                }
                    failure{
                        sh "bash send_notification.sh build 1"
                }
            }
        }
        stage('deploy-staging') {
            steps {
                script{
                    deploy("Staging")
                }
            }
                post{
                    success{
                        sh "bash send_notification.sh deploy_staging 0"
                }
                    failure{
                        sh "bash send_notification.sh deploy_staging 1"
                }
            }
    }
        stage('test-staging') {
            steps {
                script{
                    test("Staging")
                    createSelenium()
                    testSeleniumChrome()
                    testSeleniumFirefox()
                    removeSelenium()    

                }
            }
                post{
                    success{
                        sh "bash send_notification.sh testing_staging 0"
                }
                    failure{
                        sh "bash send_notification.sh testing_staging 1"
                }
            }
        }
        stage('deploy-prod') {
            steps {
                script{
                    deploy("Production")
                }
            }
                post{
                    success{
                        sh "bash send_notification.sh deploying_production 0"
                }
                    failure{
                        sh "bash send_notification.sh deploying_production 1"
                }
            }
        }
        stage('test-prod') {
            steps {
                script{
                    test("Production")
                }
            }
                post{
                    success{
                        sh "bash send_notification.sh testing_production 0"
                }
                    failure{
                        sh "bash send_notification.sh testing_production 1"
                }
            }
        }
    }
}

def deploy(String environment){
        echo "Deployment to ${environment} triggered.."
}

def test(String environment){
    echo "Running tests to ${environment}.."
}

def buildImage(){
    echo "Building image"
    sh "docker build -t mvn_tests . -f Dockerfile "
}

def createSelenium() {
    echo "Building Selenium"
    echo "Building Selenium-hub"
    echo "Building Firefox"
    echo "Building Chrome"
}

def removeSelenium(){
    echo "Removing Selenium-hub, Firefox, Chrome"
    sh "docker rm -f hub"
    sh "docker rm -f firefox"
    sh "docker rm -f chrome"
}

def testSeleniumChrome(){
    sh "docker run  --network=test-automation-setup mvn_tests mvn clean test -Dbrowser=chrome -DgridURL=hub:4444"
}

def testSeleniumFirefox(){
    sh "docker run  --network=test-automation-setup mvn_tests mvn clean test -Dbrowser=firefox -DgridURL=hub:4444"
}



